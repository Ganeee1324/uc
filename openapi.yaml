openapi: 3.1.0
info:
  title: User Authentication API
  description: API for user registration and authentication
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Development server
paths:
  /register:
    post:
      summary: Register a new user
      description: Create a new user account with username, email, and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  description: Unique username for the user
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  format: password
                  description: User's password
      responses:
        '200':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: JWT access token for authentication
        '400':
          description: Email or username already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum: [email_already_exists, username_already_exists]
                  message:
                    type: string

  /login:
    post:
      summary: Authenticate a user
      description: Verify user credentials and return an access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  format: password
                  description: User's password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: JWT access token for authentication
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum: [unauthorized]
                  message:
                    type: string
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication 